<div class="sidebar d-flex flex-column flex-shrink-0 p-3 bg-dark">
    <button class="close-sidebar-btn">&times;</button> <!-- X button to close sidebar -->
    <ul class="categories-list">
        <!-- Categories will be dynamically added here -->
    </ul>
</div>

<div class="slideshow-container">
    <div class="mySlides fade">
        <img src="/img/slide1.png" style="width:100%"> <!-- Replace with your image path -->
        <div class="text">Caption Text</div>
    </div>

    <div class="mySlides fade">
        <img src="/img/bg.png" style="width:100%"> <!-- Replace with your image path -->
        <div class="text">Caption Text</div>
    </div>

    <!-- Add more slides as needed -->

    <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
    <a class="next" onclick="plusSlides(1)">&#10095;</a>
</div>
<br>

<div style="text-align:center">
    <span class="dot" onclick="currentSlide(1)"></span> 
    <span class="dot" onclick="currentSlide(2)"></span> 
    <!-- Add more dots as needed -->
</div>


<section class="menu container mx-auto py-8">
      
    <div class="row">

        <div class="search-container">
            <button class="sidebar-toggle">&#9776;</button>

            <form action="/menu" method="GET">
                   <div class="search-input-container">
                       <input
                           type="text"
                           name="search"
                           class="search-input"
                           placeholder="Suchen"
                       />
                       <button type="submit" class="search-button">
                           <i class="fas fa-search"></i>
                       </button>
                   </div>
               </form>
           </div>

       </div>    

    </div>

    <div class="row">
        <% pizzas.forEach(function(pizza) { %>
            <div class="col-md-3">
                <a href="/product/<%= pizza._id %>" class="card-link">
                    <div class="card product-card">
                        <% if (pizza.image && pizza.image.length > 0) { %>
                            <img src="https://bahl.fra1.digitaloceanspaces.com<%= pizza.image[0] %>.jpg" class="card-img-top product-image" alt="<%= pizza.name %>">
                        <% } else { %>
                            <!-- Provide a placeholder image or text if no image is available -->
                            <div class="placeholder-image">No Image Available</div>
                        <% } %>
                        <div class="card-body">
                            <h5 class="card-title"><%= pizza.name %></h5>
                            <p class="card-text"><%= pizza.price %>â‚¬</p>
                        </div>
                    </div>
                </a>
            </div>
        <% }) %>
    </div>
    

</section>


<div class="pagination-container">
    <a href="<%= currentPage > 1 ? `/menu?page=${currentPage - 1}${searchQuery ? '&search=' + searchQuery : ''}` : '#' %>" class="pagination-prev">&#10094;</a>

    <%
       let pageStart = Math.max(currentPage - 2, 1);
       let pageEnd = Math.min(currentPage + 2, totalPages);

       // Show the first page and ellipsis if necessary
       if (pageStart > 1) { %>
           <a href="menu/?page=1<%= searchQuery ? '&search=' + searchQuery : '' %>" class="page-number">1</a>
           <% if (pageStart > 2) { %>
               <span class="ellipsis">...</span>
           <% } %>
    <% }

       for(let i = pageStart; i <= pageEnd; i++) { %>
           <a href="/menu/?page=<%= i %><%= searchQuery ? '&search=' + searchQuery : '' %>" 
              class="page-number <%= i === currentPage ? 'active' : '' %>"> 
              <%= i %> 
           </a>
    <% }

       if (pageEnd < totalPages) {
           if (pageEnd < totalPages - 1) { %>
               <span class="ellipsis">...</span>
           <% } %>
           <a href="/menu/?page=<%= totalPages %><%= searchQuery ? '&search=' + searchQuery : '' %>" class="page-number"><%= totalPages %></a>
    <% } %>

    <a href="<%= currentPage < totalPages ? `/menu?page=${currentPage + 1}${searchQuery ? '&search=' + searchQuery : ''}` : '#' %>" class="pagination-next">&#10095;</a>

  </div>


<script>

let slideIndex = 0;
showSlides();

function plusSlides(n) {
  showSlides(slideIndex += n);
}

function currentSlide(n) {
  showSlides(slideIndex = n);
}

function showSlides() {
  let i;
  let slides = document.getElementsByClassName("mySlides");
  let dots = document.getElementsByClassName("dot");
  let currentPage = JSON.stringify(currentPage);
  let totalPages = JSON.stringify(totalPages);
  let searchQuery = JSON.stringify(searchQuery);

  for (i = 0; i < slides.length; i++) {
      slides[i].style.display = "none";  
  }
  slideIndex++;
  if (slideIndex > slides.length) {slideIndex = 1}    
  for (i = 0; i < dots.length; i++) {
      dots[i].className = dots[i].className.replace(" active", "");
  }
  slides[slideIndex-1].style.display = "block";  
  dots[slideIndex-1].className += " active";
  setTimeout(showSlides, 10000); // Change image every 4 seconds
}

document.querySelector('.pagination-prev').addEventListener('click', function(e) {
    e.preventDefault();
    if (currentPage > 1) {
        window.location.href = `/menu?page=${currentPage - 1}${searchQuery ? '&search=' + searchQuery : ''}`;
    }
});

document.querySelector('.pagination-next').addEventListener('click', function(e) {
    e.preventDefault();
    if (currentPage < totalPages) {
        window.location.href = `/menu?page=${currentPage + 1}${searchQuery ? '&search=' + searchQuery : ''}`;
    }
});
</script>

<style>
    .sidebar {
        z-index: 100px;
    }
    .card-link {
        text-decoration: none; /* Removes underline from links */
        color: inherit; /* Inherits text color to prevent color changes */
        display: block; /* Makes the entire area clickable */
    }

    .product-card {
        margin-bottom: 20px; /* Adds some space below each card */
        transition: transform 0.3s ease, background-color 0.3s; /* Smooth transition for transform and background color */
        border: 1px solid #ddd; /* Optional: adds a border */
    }

    .product-card:hover {
        transform: scale(1.03); /* Slightly enlarges the card on hover */
        background-color: black; /* Changes background to black on hover */
        color: white; /* Changes text color to white for readability */
    }

    .product-card:hover .product-image {
        transform: scale(1.05); /* Slightly enlarges the image on hover */
    }

    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: space-between; /* Spreads content inside the card body */
    }

    .card-title, .card-text {
        color: inherit; /* Ensures text color inherits from the card for proper hover effect */
    }

    .card-title {
        font-size: 1.25rem; /* Adjust title size */
        margin-bottom: 0.75rem;
    }

    .card-text {
        font-size: 1rem; /* Adjust text size for consistency */
        margin-bottom: 1.25rem; /* Adds some space above the bottom of the card */
    }
    .sidebar {
    position: fixed;
    top: 0;
    left: -280px; /* Hide sidebar initially */
    width: 280px;
    height: 100%;
    overflow-y: auto;
    background-color: #333;
    transition: left 0.3s ease; /* Smooth transition for sliding animation */
    z-index: 1000; /* Ensure sidebar is above other content */
    }
    
    .sidebar.active {
        left: 0; /* Show sidebar by moving it into view */
    }
    
    .content {
        margin-left: 280px; /* Adjust content area to accommodate the sidebar */
        transition: margin-left 0.3s ease; /* Smooth transition for adjusting content area */
    }
    
/* Adjust margin between products and search bar */
.search-container {
    margin-bottom: 20px; /* Add margin at the bottom */
}

/* Position sidebar toggle on the left */
.sidebar-toggle {
    margin-right: 800px;
    background-color: black; /* Set background color to black */
    border: none; /* Remove border */
    color: white; /* Set text color to white */
    padding: 10px; /* Add padding for better appearance */
    cursor: pointer; /* Change cursor to pointer on hover */
}

/* Add stripes to the toggle button */
.sidebar-toggle::before, .sidebar-toggle::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 2px;
    height: 20px;
    background-color: white;
}

/* Position the stripes */
.sidebar-toggle::before {
    transform: translate(-50%, -50%) rotate(45deg);
}

.sidebar-toggle::after {
    transform: translate(-50%, -50%) rotate(-45deg);
}


    
    


</style>

<script>

document.addEventListener('DOMContentLoaded', () => {
    const sidebar = document.querySelector('.sidebar');
    const sidebarToggle = document.querySelector('.sidebar-toggle');
    const closeSidebarBtn = document.querySelector('.close-sidebar-btn');

    sidebarToggle.addEventListener('click', () => {
        sidebar.classList.toggle('active');
    });

    closeSidebarBtn.addEventListener('click', () => {
        sidebar.classList.remove('active');
    });

    // Fetch categories from the backend and render sidebar
    fetch('/categories')
        .then(response => response.json())
        .then(categories => {
            renderSidebar(categories);
            setupSidebarEventListeners(); // Add this line to set up event listeners after rendering sidebar
        })
        .catch(error => console.error('Error fetching categories:', error));

    // Function to render categories in the sidebar
    function renderSidebar(categories) {
        const categoriesList = document.querySelector('.categories-list');

        categories.forEach(category => {
            const listItem = document.createElement('li');
            const link = document.createElement('a');
            link.textContent = category.Parent_Category;
            link.classList.add('text-white');
            link.href = '#'; // Add a dummy href
            listItem.appendChild(link);
            categoriesList.appendChild(listItem);

            // Check if the category has subcategories
            if (category.Subcategories && category.Subcategories.length > 0) {
                const subList = document.createElement('ul');
                subList.classList.add('list-unstyled', 'ml-3', 'subcategories-list', 'd-none');
                category.Subcategories.forEach(subcategory => {
                    const subItem = document.createElement('li');
                    const subLink = document.createElement('a');
                    subLink.textContent = subcategory;
                    subLink.href = '#'; // Add a dummy href
                    subLink.classList.add('text-white');
                    subItem.appendChild(subLink);
                    subList.appendChild(subItem);
                });
                listItem.appendChild(subList);

                // Add click event listener to parent category to toggle subcategories
                link.addEventListener('click', () => {
                    subList.classList.toggle('d-none');
                });
            }
        });
    }
});


</script>




