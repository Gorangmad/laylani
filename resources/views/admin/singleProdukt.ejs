<style>
    .container {
        display: flex;
        justify-content: space-between;
    }
    /* .product-info {
        margin-top: 10%;
        margin-right: 20%;
        width: 50%;
    } */
    /* .categorien {
        margin-top: 5%;
        width: 100%;

    } */
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
    var tabs = document.querySelectorAll('.nav-link');
    
    tabs.forEach(function(tab) {
        tab.addEventListener('click', function() {
            var activeTab = document.querySelector('.nav-link.active');
            var activeContent = document.querySelector('.tab-content:not([style="display: none;"])');
            
            // Remove active class from currently active tab and hide its content
            if (activeTab) {
                activeTab.classList.remove('active');
                if (activeContent) {
                    activeContent.style.display = 'none';
                }
            }
            
            // Add active class to clicked tab and show its content
            this.classList.add('active');
            var targetContent = document.querySelector(this.getAttribute('data-bs-target'));
            if (targetContent) {
                targetContent.style.display = 'block';
            }
        });
    });

    document.getElementById('addMorePicturesBtn').addEventListener('click', function() {
        // Create input element for file selection
        var fileInput = document.createElement('input');
        fileInput.type = 'file';
        fileInput.multiple = true; // Allow multiple file selection
        fileInput.click(); // Simulate a click event on the file input

        // Event listener for when files are selected
        fileInput.addEventListener('change', function(event) {
            var selectedFiles = event.target.files;

            // Create a FormData object to send the files
            var formData = new FormData();
            for (var i = 0; i < selectedFiles.length; i++) {
                formData.append('images', selectedFiles[i]); // Append each selected file to the FormData object
            }

            const currentUrl = window.location.href;
            const productId = currentUrl.substring(currentUrl.lastIndexOf('/') + 1);

            formData.append('productId', productId); // Append the productId to the FormData

            // Send the FormData object to the backend
            fetch('/admin/products/imageReupload', {
                method: 'POST',
                body: formData // Set the body of the request to the FormData object
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json(); // Parse the response body as JSON
            })
            .then(data => {
                // Handle the response from the backend
                console.log('Files uploaded successfully:', data);
                alert('Files uploaded successfully');
            })
            .catch(error => {
                console.error('Error uploading files:', error);
                alert('Failed to upload files');
            });
        });
    });


    document.getElementById('similarProductsResults').addEventListener('click', function(event) {
        // Check if the clicked element is a button with the 'add-btn' class
        if (event.target && event.target.nodeName === "BUTTON" && event.target.classList.contains('add-btn')) {
            const relatedProductId = event.target.getAttribute('data-product-id');
            const currentProductId = window.location.pathname.split('/').pop();

            fetch(`/admin/products/link/${currentProductId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ relatedProductId: relatedProductId })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                alert('Produkt erfolgreich verknüpft');
                // Optionally, refresh the page or update the UI to reflect the new related product
            })
            .catch(error => {
                console.error('Error linking products:', error);
            });
        }
    });

    document.getElementById('saveCategories').addEventListener('click', function() {
    // Select all checked category checkboxes

    const currentProductId = window.location.pathname.split('/').pop();

    const checkedCategories = document.querySelectorAll('.category-checkbox:checked');

    const checkedCategoryValues = Array.from(checkedCategories).map(checkbox => checkbox.value);

    const checkedSubcategories = Array.from(document.querySelectorAll('.subcategory-checkbox:checked'));

    const checkedSubcategoryValues = Array.from(checkedSubcategories).map(checkbox => checkbox.value);


    // Combine the values of checked categories and subcategories
    const allCheckedNos = checkedCategoryValues.concat(checkedSubcategoryValues)
                              .join(',');

    

    console.log('All Checked Nos:', allCheckedNos);

    // Example of sending this data to the server (adjust as necessary)
    fetch('/admin/update/categories', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ categories: allCheckedNos , currentProductId: currentProductId})
    })
    .then(response => response.json())
    .then(data => {
        console.log(data);
        alert('Categories saved successfully!');
    })
    .catch(error => {
        console.error('Error saving categories:', error);
        alert('Failed to save categories.');
    });
  });

});
</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('searchButton').addEventListener('click', function() {
            var query = document.getElementById("searchSimilarProducts").value; // Get the current value of the input field
            
            fetch('/admin/products/search/similiar', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ query: query }) // Convert the JavaScript object to a JSON string
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json(); // Parse the response body as JSON
            })
            .then(data => {
                const resultsContainer = document.getElementById('similarProductsResults');
                resultsContainer.innerHTML = ''; 

                data.products.slice(0, 20).forEach(product => {
                    // Create HTML for each product
                    const productElement = document.createElement('div');
                    productElement.classList.add('product-result');
                    productElement.style.paddingTop = '4px';
                    productElement.style.paddingBottom = '4px';
                    productElement.style.borderBottom = '1px solid black';
                    productElement.innerHTML = `
                        <div class="product-photo ">
                            <h5>${product.name}</h5>
                            <img src="https://bahl.fra1.digitaloceanspaces.com${product.image}.jpg" alt="${product.name}" style="width: 100px; height: auto;">
                            <button type="button" class="btn btn-primary add-btn my-1" data-product-id="${product._id}">Produkt Verknüpfen</button>
                            </div>
                    `;
    
                    resultsContainer.appendChild(productElement);
                });
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });
        });

           // Add event listener for the delete buttons inside the "Ähnliche Produkte" section
    const deleteButtons = document.querySelectorAll('.delete-similiar-btn');
    deleteButtons.forEach(function(button) {
        button.addEventListener('click', function(event) {
            // Handle the click event for the delete button
            const productId = button.getAttribute('data-product-id');
            
            const currentProductId = window.location.pathname.split('/').pop();

            // Send a request to the backend to delete the product
            fetch(`/admin/products/${productId}/delete`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId: productId , currentProductId: currentProductId}) // Send product name as additional data
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Handle success response from the backend (if needed)
                alert('Produkt wurde entknüpft!');
                // Optionally, update the UI or display a success message
            })
            .catch(error => {
                alert('Fehler beim entknüpfen!');
                // Handle error (e.g., display error message)
            });
        });
    });
    });
    </script>
    
    
    <%- include('../components/sidebar') %>
    

 <div class="lg:ml-72">


<div class=" w-11/12 mx-auto   grid xl:grid-cols-2 gap-8 py-5">
    <div class="product-info flex flex-col justify-center items-center lg:mr-4 px-4  rounded-lg border-2 shadow-lg  col-span-1 " style="border-color: black;">
        <button id="addMorePicturesBtn" class="btn btn-primary my-4 w-fit mx-auto">Add More Pictures</button>
        <% if (product.image && product.image.length > 0) { %>
            <div id="productCarousel" class="carousel slide w-72 sm:w-80 md:w-96 " data-ride="carousel">
              <div class="carousel-inner">
                <% product.image.forEach(function(image, index) { %>
                  <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                    <img src="https://bahl.fra1.digitaloceanspaces.com<%= image %>.jpg" class="  w-72 sm:w-80 md:w-96 " alt="<%= product.name %> Image <%= index + 1 %>">
                  </div>
                <% }); %>
              </div>
              <% if (product.image.length > 1) { %>
                <a class="carousel-control-prev" href="#productCarousel" role="button" data-slide="prev">
                  <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                  <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#productCarousel" role="button" data-slide="next">
                  <span class="carousel-control-next-icon" aria-hidden="true"></span>
                  <span class="sr-only">Next</span>
                </a>
              <% } %>
            </div>
        <% } %>    
        <p class="font-semibold text-2xl sm:text-3xl md:text-4xl text-center"><%= product.name %></p>
        <div class=" w-full flex  items-start flex-col">

            <p><%= product.description %></p>
            <p>Preis: <%= product.price %></p>
            <p>Görßen: <%= product.sizes %></p>
            <p>Verfügbarkeit: <%= product.availability %></p>
            <p>Ablauf Datum: <%= product.expiry ? product.expiry.toLocaleDateString('en-GB') : 'N/A' %></p>
            <p>Categorien: <%= productCategoryName %></p>
            
            <p>Ähnliche Produkte:<%relatedMenuNames.forEach(function(name) { %>
                <div>
                    <p><%= name.name %></p>
                    <button type="button" class="btn btn-danger delete-similiar-btn" data-product-name="<%= name %>" data-product-id="<%= name._id%>">X</button>
                </div>
                <% }); %></p>
            </div>             
    </div>


    <div class="categorien overflow-auto p-3 mb-3 border rounded mt-4 col-span-1 " style="max-height: 800px; min-width: 320px;">
    <ul class="nav nav-tabs " id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="form1-tab" data-bs-toggle="tab" data-bs-target="#form1" type="button" role="tab" aria-controls="form1" aria-selected="true">Categories</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="form2-tab" data-bs-toggle="tab" data-bs-target="#form2" type="button" role="tab" aria-controls="form2" aria-selected="false">Ähnliche Produkte</button>
        </li>
    </ul>
    
    <!-- Tab content for Categories -->
    <div class="tab-content" id="form1">
        <form class="bg-light p-1">
            <% categories.forEach(function(category) { %>
                <div class="form-check border-b py-1 border-gray-500">
                  
                  <input class="form-check-input category-checkbox" type="checkbox" id="category-<%= category.No %>" name="categories" value="<%= category.No %>" <%= productCategoryName.includes(category.Parent_Category) ? 'checked' : '' %>>
                  <label class="form-check-label" for="category-<%= category.No %>"><%= category.Parent_Category %></label>
                </div>
                
                <% if(category.subcategories && category.subcategories.length > 0) { %>
                  <% category.subcategories.forEach(function(subcategory) { %>
                    <div class="form-check ml-3 py-0.5 border-b  border-gray-300">
                      <input class="form-check-input subcategory-checkbox" type="checkbox" id="subcategory-<%= subcategory.No %>" name="subcategories" value="<%= subcategory.No %>" <%= productCategoryName.includes(subcategory.name) ? 'checked' : '' %>>
                      <label class="form-check-label" for="subcategory-<%= subcategory.No %>"><%= subcategory.name %></label>
                    </div>
                  <% }); %>
                <% } %>
              <% }); %>              
        </form>
        <button type="button" id="saveCategories" class="btn btn-success mt-2">Save Categories</button>
    </div>
    
    <!-- Tab content for Ähnliche Produkte -->
    <div class="tab-content" id="form2" style="display: none;">
        <form class="bg-light">
            <div class="form-group flex my-3">
                <input type="text" class="form-control mr-2" id="searchSimilarProducts" placeholder="Produkt suchen...">
                <button type="button" id="searchButton" class="btn btn-primary">Suchen</button> <!-- Search button -->
            </div>
            <div id="similarProductsResults" class="results">
            </div>
        </form>
    </div>


</div>
</div>